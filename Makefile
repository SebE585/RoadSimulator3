# ================================
#  RoadSimulator3 ‚Äì Makefile
# ================================

PYTHON := python3
SIM_SCRIPT := runner/run_simulation.py
CHECK_SCRIPT := core/check_realism.py
OUTPUT_DIR := data/simulations

export PYTHONPATH := .

.PHONY: simulate check clean zip release

# Lancer une simulation compl√®te
simulate:
	@echo "üöÄ Lancement de la simulation..."
	PYTHONPATH=. $(PYTHON) -m runner.run_simulation

# V√©rifier la coh√©rence et le r√©alisme d'une trace
check:
	@echo "üîç V√©rification de la simulation..."
	@if [ -f $(OUTPUT_DIR)/last_trace.csv ]; then \
		PYTHONPATH=. $(PYTHON) -m core.check_realism $(OUTPUT_DIR)/last_trace.csv; \
	else \
		echo "‚ùå Aucune trace trouv√©e dans $(OUTPUT_DIR)"; \
	fi

# Nettoyer outputs, logs, cache
clean:
	@echo "üßπ Nettoyage des outputs, logs et cache..."
	bash scripts/clean_outputs.sh

# Cr√©er une archive ZIP propre du projet
zip: clean
	@echo "üì¶ Cr√©ation de l'archive RoadSimulator3.zip..."
	@zip -r RoadSimulator3.zip . \
		-x "*.git*" \
		-x "__pycache__/*" \
		-x "*.pyc" \
		-x "*.pyo" \
		-x "*.DS_Store" \
		-x "data/*" \
		-x "notebooks/*" \
		-x "outputs/*" \
		-x "logs/*" \
		-x "out*/**" \
		-x "cache/*" \
		-x "venv/*" \
		-x ".venv/*"

# Release compl√®te avec commit, tag, push et archive
release:
	@if [ -z "$(VERSION)" ]; then \
		echo "‚ùå VERSION non sp√©cifi√©e. Utilise : make release VERSION=1.0.0"; \
		exit 1; \
	fi
	@echo "üì¶ Publication version $(VERSION)..."
	@git add .
	@git commit -m "üöÄ Version $(VERSION) stable" || echo "(info) aucun changement √† committer"
	@git tag -a v$(VERSION) -m "Version stable v$(VERSION) ‚Äì RoadSimulator3"
	@git push origin main
	@git push origin v$(VERSION)
	$(MAKE) zip